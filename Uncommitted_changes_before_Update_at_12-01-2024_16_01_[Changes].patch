Subject: [PATCH] Uncommitted changes before Update at 12-01-2024 16:01 [Changes]
---
Index: app/src/main/java/com/spark/swarajyabiz/ui/FragmentHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/spark/swarajyabiz/ui/FragmentHome.java b/app/src/main/java/com/spark/swarajyabiz/ui/FragmentHome.java
--- a/app/src/main/java/com/spark/swarajyabiz/ui/FragmentHome.java	
+++ b/app/src/main/java/com/spark/swarajyabiz/ui/FragmentHome.java	
@@ -10,8 +10,11 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
+import android.location.Address;
+import android.location.Geocoder;
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
@@ -36,7 +39,10 @@
 import android.widget.Toast;
 
 import androidx.activity.OnBackPressedCallback;
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.contract.ActivityResultContracts;
 import androidx.cardview.widget.CardView;
+import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 import androidx.core.content.FileProvider;
 import androidx.fragment.app.Fragment;
@@ -50,6 +56,8 @@
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.target.CustomTarget;
 import com.bumptech.glide.request.transition.Transition;
+import com.google.android.gms.location.FusedLocationProviderClient;
+import com.google.android.gms.location.LocationServices;
 import com.google.android.material.bottomsheet.BottomSheetBehavior;
 import com.google.android.material.bottomsheet.BottomSheetDialog;
 import com.google.android.material.tabs.TabLayout;
@@ -61,6 +69,7 @@
 import com.spark.swarajyabiz.Adapters.CategoryAdapter;
 import com.spark.swarajyabiz.Adapters.DataFetcher;
 import com.spark.swarajyabiz.Adapters.HomeMultiAdapter;
+import com.spark.swarajyabiz.Adapters.StringSplit;
 import com.spark.swarajyabiz.Adapters.SubCateAdapter;
 import com.spark.swarajyabiz.BannerDetails;
 import com.spark.swarajyabiz.BuildConfig;
@@ -75,6 +84,7 @@
 import com.spark.swarajyabiz.JobDetails;
 import com.spark.swarajyabiz.JobPostAdapter;
 import com.spark.swarajyabiz.JobPostDetails;
+
 import com.spark.swarajyabiz.ModelClasses.CategoryModel;
 import com.spark.swarajyabiz.ModelClasses.OrderModel;
 import com.spark.swarajyabiz.ModelClasses.PostModel;
@@ -96,13 +106,15 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutionException;
+import java.util.concurrent.Executor;
 
 import io.reactivex.rxjava3.annotations.NonNull;
 
 public class FragmentHome extends Fragment implements PostAdapter.PostClickListener, JobPostAdapter.OnClickListener,
-                                       HomeMultiAdapter.OnViewDetailsClickListener, DataFetcher,CategoryAdapter.OnItemClickListener, SubCateAdapter.OnItemClickListener {
+        HomeMultiAdapter.OnViewDetailsClickListener, DataFetcher, CategoryAdapter.OnItemClickListener, SubCateAdapter.OnItemClickListener {
 
     private RecyclerView recyclerView, jobpostrecyclerview, informationrecycerview;
     HomeMultiAdapter homeMultiAdapter;
@@ -110,7 +122,7 @@
     private List<ItemList> itemList = new ArrayList<>(); // Create a list to store post details
     private List<ItemList> filteredList = new ArrayList<>();
 
-    private List<JobDetails> jobDetailsList ;
+    private List<JobDetails> jobDetailsList;
     private List<JobDetails> filteredjobpostlist;
     private List<EmployeeDetails> filteredemployeeDetailsList;
     private List<ChatJob> chatJobList;
@@ -119,11 +131,11 @@
     private PostAdapter postAdapter;
     CardView searchcard;
     List<Shop> shopList;
-    String shopcontactNumber, taluka,address, shopName, shopimage, destrict;
+    String shopcontactNumber, taluka, address, shopName, shopimage, destrict;
     private List<ItemList> originalItemList; // Keep a copy of the original list
     private int lastDisplayedIndex = -1;
     FrameLayout frameLayout;
-    ImageView adimagecancel,filterx;
+    ImageView adimagecancel, filterx;
     private boolean imageShown = false;
     DatabaseReference userRef, shopRef;
     AlertDialog dialog;
@@ -132,28 +144,46 @@
     JobPostAdapter jobPostAdapter;
     EmployeeAdapter employeeAdapter;
 
-    TextView usernametextview;
+    TextView usernametextview,location;
     RadioButton businessradiobtn, jobradiobtn;
     RadioGroup radioGroup;
     EditText searchedittext;
 
-    List<Object> homeItemList=new ArrayList<>();
+    List<Object> homeItemList = new ArrayList<>();
 
-    String shopname, premium, postImg, postDesc,postType ,postKeys, postCate, contactkey;
+    String shopname, premium, postImg, postDesc, postType, postKeys, postCate, contactkey;
     String shopimagex;
-    String shopaddress, checkstring="rdbiz";
+    String shopaddress, checkstring = "rdbiz";
     SwipeRefreshLayout swipeRefreshLayout;
 
     CategoryAdapter categoryAdapter;
 
     SubCateAdapter subCateAdapter;
-    ArrayList<CategoryModel> categoryModels=new ArrayList<>();
-    ArrayList<SubCategoryModel> subCategoryModels=new ArrayList<>();
+    ArrayList<CategoryModel> categoryModels = new ArrayList<>();
+    ArrayList<SubCategoryModel> subCategoryModels = new ArrayList<>();
 
 
     private LottieAnimationView lottieAnimationView;
 
-    int x=0;
+    int x = 0;
+
+    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1001;
+
+    LinearLayout setLoc;
+
+    private final ActivityResultLauncher<String> requestPermissionLauncher = registerForActivityResult(
+            new ActivityResultContracts.RequestPermission(),
+            isGranted -> {
+                if (isGranted) {
+                    // Permission granted, proceed to get location
+                    getLocation();
+                } else {
+                    Toast.makeText(requireContext(), "Location permission denied", Toast.LENGTH_SHORT).show();
+                }
+            }
+    );
+
+
     public FragmentHome() {
         // Required empty public constructor
     }
@@ -162,7 +192,7 @@
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
 
-       // Inflate the layout for this fragment
+        // Inflate the layout for this fragment
         View view = inflater.inflate(R.layout.fragment__home, container, false);
 
         // Test Github
@@ -181,12 +211,13 @@
         radioGroup = view.findViewById(R.id.rdgrpx);
         swipeRefreshLayout = view.findViewById(R.id.swipeRefreshLayout);
         lottieAnimationView = view.findViewById(R.id.lottieAnimationView);
+        location=view.findViewById(R.id.pincode);
+        setLoc=view.findViewById(R.id.locset);
 
         swipeRefreshLayout.setColorSchemeResources(android.R.color.holo_blue_bright, android.R.color.holo_green_light, android.R.color.holo_orange_light, android.R.color.holo_red_light);
 
         filterx = view.findViewById(R.id.filters);
 
-
         DatabaseReference adref = FirebaseDatabase.getInstance().getReference("ads");
         userRef = FirebaseDatabase.getInstance().getReference("Users");
         shopRef = FirebaseDatabase.getInstance().getReference("Shop");
@@ -195,12 +226,23 @@
         userId = sharedPreference.getString("mobilenumber", null);
         if (userId != null) {
             // userId = mAuth.getCurrentUser().getUid();
-            System.out.println("dffvf  " +userId);
+            System.out.println("dffvf  " + userId);
             userRef.child(userId);
         } else {
             // Handle the case where the user ID is not available (e.g., not logged in or not registered)
         }
 
+        // Check and request location permissions if not granted
+        if (ContextCompat.checkSelfPermission(getActivity(), android.Manifest.permission.ACCESS_FINE_LOCATION)
+                != PackageManager.PERMISSION_GRANTED) {
+            ActivityCompat.requestPermissions(getActivity(),
+                    new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION},
+                    LOCATION_PERMISSION_REQUEST_CODE);
+        } else {
+            // Permissions already granted, proceed to get location
+            getLocation();
+        }
+
 //        shopRef.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
 //            @Override
 //            public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
@@ -225,34 +267,37 @@
             @Override
             public void onRefresh() {
                 if (checkstring.equals("rdbiz")) {
-                    ClearAllHome();
-                    LoadHomeDataNewTest();
-                    // LoadHomeData();
+                    if(location.getText().toString().equals("Global")){
+                        ClearAllHome();
+                        LoadHomeDataNewTest();
+                    }else {
+                        ClearAllHome();
+                        LoadHomeDataNewByLocation();
+                    }
                     swipeRefreshLayout.setRefreshing(false);
-
-                } else if (checkstring.equals("notbiz")){
+                } else if (checkstring.equals("notbiz")) {
 
-                        ClearAll();
-                        jobDetailsList = new ArrayList<>();
-                        filteredjobpostlist = new ArrayList<>();
-                        jobPostAdapter = new JobPostAdapter(jobDetailsList, getContext(), sharedPreference, FragmentHome.this);
-                        informationrecycerview.setLayoutManager(new LinearLayoutManager(getContext()));
-                        informationrecycerview.setAdapter(jobPostAdapter);
-                        retrieveJobPostDetails();
-                        swipeRefreshLayout.setRefreshing(false);
+                    ClearAll();
+                    jobDetailsList = new ArrayList<>();
+                    filteredjobpostlist = new ArrayList<>();
+                    jobPostAdapter = new JobPostAdapter(jobDetailsList, getContext(), sharedPreference, FragmentHome.this);
+                    informationrecycerview.setLayoutManager(new LinearLayoutManager(getContext()));
+                    informationrecycerview.setAdapter(jobPostAdapter);
+                    retrieveJobPostDetails();
+                    swipeRefreshLayout.setRefreshing(false);
 
-                    } else if (checkstring.equals("bziaccount")){
+                } else if (checkstring.equals("bziaccount")) {
 
-                        ClearAllEmployee();
-                        employeeDetailsList = new ArrayList<>();
-                        filteredemployeeDetailsList = new ArrayList<>();
-                        employeeAdapter = new EmployeeAdapter(employeeDetailsList, getContext(), sharedPreference);
-                        informationrecycerview.setLayoutManager(new LinearLayoutManager(getContext()));
-                        informationrecycerview.setAdapter(employeeAdapter);
-                        retrieveEmployeeDetails();
-                        swipeRefreshLayout.setRefreshing(false);
+                    ClearAllEmployee();
+                    employeeDetailsList = new ArrayList<>();
+                    filteredemployeeDetailsList = new ArrayList<>();
+                    employeeAdapter = new EmployeeAdapter(employeeDetailsList, getContext(), sharedPreference);
+                    informationrecycerview.setLayoutManager(new LinearLayoutManager(getContext()));
+                    informationrecycerview.setAdapter(employeeAdapter);
+                    retrieveEmployeeDetails();
+                    swipeRefreshLayout.setRefreshing(false);
 
-                    }
+                }
 
             }
         });
@@ -261,7 +306,7 @@
         userRef.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
-                if (snapshot.exists()){
+                if (snapshot.exists()) {
                     String name = snapshot.child("name").getValue(String.class);
 
                     if (name != null && name.contains(" ")) {
@@ -293,8 +338,6 @@
         }
 
 
-
-
         // In your onCreate or wherever you initialize the app
         SharedPreferences sharedPreferences = getActivity().getSharedPreferences("MyPreferences", MODE_PRIVATE);
         lastDisplayedIndex = sharedPreferences.getInt("lastDisplayedIndex", -1);
@@ -333,11 +376,11 @@
 //                                lastDisplayedIndex = 0;
 //                            }
 
-                            // Retrieve the URL for the current index
-                          // String currentImageUrl = imageUrls.get(lastDisplayedIndex);
-                        for (DataSnapshot dataSnapshot : snapshot.getChildren()){
+                        // Retrieve the URL for the current index
+                        // String currentImageUrl = imageUrls.get(lastDisplayedIndex);
+                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
                             String bannerimage = dataSnapshot.child("bannerimage").getValue(String.class);
-                            System.out.println("urj " +bannerimage);
+                            System.out.println("urj " + bannerimage);
                             // Create and show the image alert dialog for the current image URL
                             if (bannerimage != null) {
                                 showImageAlertDialog(bannerimage);
@@ -359,7 +402,7 @@
             });
         }
 
-      //  retrievePostDetails(); // Call the method to retrieve post details
+        //  retrievePostDetails(); // Call the method to retrieve post details
 
 
         searchImage.setOnClickListener(new View.OnClickListener() {
@@ -374,7 +417,7 @@
         });
 
 
-       // SearchView searchView = view.findViewById(R.id.searchview);
+        // SearchView searchView = view.findViewById(R.id.searchview);
 //        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
 //            @Override
 //            public boolean onQueryTextSubmit(String query) {
@@ -408,7 +451,6 @@
 
         businessradiobtn.setChecked(true);
 
-
         radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(RadioGroup radioGroup, int i) {
@@ -419,8 +461,13 @@
                         case R.id.rdbusiness:
                             // Do Something
                             checkstring = "rdbiz";
-                            ClearAllHome();
-                            LoadHomeDataNewTest();
+                            if(location.getText().toString().equals("Global")){
+                                ClearAllHome();
+                                LoadHomeDataNewTest();
+                            }else {
+                                ClearAllHome();
+                                LoadHomeDataNewByLocation();
+                            }
                             searchedittext.setText("");
                             searchedittext.setHint("व्यवसाय शोधा");
                             break;
@@ -428,11 +475,10 @@
                         case R.id.rdjob:
                             // Do Something
                             checkstring = "rdjob";
-
                             shopRef.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
                                 @Override
                                 public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
-                                    if (snapshot.exists()){
+                                    if (snapshot.exists()) {
                                         checkstring = "bziaccount";
                                         ClearAllEmployee();
                                         employeeDetailsList = new ArrayList<>();
@@ -501,7 +547,6 @@
                             });
 
 
-
                             break;
 
                     }
@@ -516,45 +561,66 @@
             }
         });
 
-      //  retrieveitemDetails();
-        checkstring="rdbiz";
-        ClearAllHome();
-        LoadHomeDataNewTest();
+        setLoc.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                setLocation();
+            }
+        });
+
+        //  retrieveitemDetails();
+        checkstring = "rdbiz";
+       // ClearAllHome();
+      //  LoadHomeDataNewTest();
 
         return view;
     }
 
-    private void ClearAll(){
-        if(jobDetailsList != null){
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+
+        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {
+            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                // Location permission granted, proceed to get location
+                getLocation();
+            } else {
+                Toast.makeText(getActivity(), "Location permission denied", Toast.LENGTH_SHORT).show();
+            }
+        }
+    }
+
+    private void ClearAll() {
+        if (jobDetailsList != null) {
             jobDetailsList.clear();
 
-            if(jobPostAdapter!=null){
+            if (jobPostAdapter != null) {
                 jobPostAdapter.notifyDataSetChanged();
             }
         }
-        jobDetailsList=new ArrayList<>();
+        jobDetailsList = new ArrayList<>();
     }
 
-    private void ClearAllEmployee(){
-        if(employeeDetailsList != null){
+    private void ClearAllEmployee() {
+        if (employeeDetailsList != null) {
             employeeDetailsList.clear();
 
-            if(employeeAdapter!=null){
+            if (employeeAdapter != null) {
                 employeeAdapter.notifyDataSetChanged();
             }
         }
-        employeeDetailsList=new ArrayList<>();
+        employeeDetailsList = new ArrayList<>();
     }
 
-    private void ClearAllHome(){
-        if(homeItemList != null){
+    private void ClearAllHome() {
+        if (homeItemList != null) {
             homeItemList.clear();
 
-            if(homeMultiAdapter!=null){
+            if (homeMultiAdapter != null) {
                 homeMultiAdapter.notifyDataSetChanged();
             }
         }
-        homeItemList=new ArrayList<>();
+        homeItemList = new ArrayList<>();
     }
 
     private void displayImageForFirstLaunch() {
@@ -604,7 +670,7 @@
             userRef.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
                 @Override
                 public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
-                    if (snapshot.exists()){
+                    if (snapshot.exists()) {
                         String name = snapshot.child("name").getValue(String.class);
                         nametext.setText(name);
                     }
@@ -813,7 +879,6 @@
     public void onContactClick(int position) {
 
 
-
     }
 
     @Override
@@ -915,18 +980,18 @@
                 postList.clear(); // Clear the existing list before adding new data
                 itemList.clear();
                 for (DataSnapshot shopSnapshot : dataSnapshot.getChildren()) {
-                   // Shop shop = shopSnapshot.getValue(Shop.class);
-                     shopName = shopSnapshot.child("shopName").getValue(String.class);
-                     shopimage = shopSnapshot.child("url").getValue(String.class);
-                     destrict = shopSnapshot.child("district").getValue(String.class);
-                     taluka = shopSnapshot.child("taluka").getValue(String.class);
-                     address = shopSnapshot.child("address").getValue(String.class);
+                    // Shop shop = shopSnapshot.getValue(Shop.class);
+                    shopName = shopSnapshot.child("shopName").getValue(String.class);
+                    shopimage = shopSnapshot.child("url").getValue(String.class);
+                    destrict = shopSnapshot.child("district").getValue(String.class);
+                    taluka = shopSnapshot.child("taluka").getValue(String.class);
+                    address = shopSnapshot.child("address").getValue(String.class);
                     shopcontactNumber = shopSnapshot.child("contactNumber").getValue(String.class);
                     Boolean profileverify = shopSnapshot.child("profileverified").getValue(Boolean.class);
                     // long promotedShopCount = shopSnapshot.child("promotedShops").getChildrenCount();
                     System.out.println("sdfdf " + taluka);
 
-                    System.out.println("rgdfg "+shopName);
+                    System.out.println("rgdfg " + shopName);
                     // postAdapter.setShopName(shopName);
                     if (profileverify != null && profileverify) {
                         DataSnapshot itemsSnapshot = shopSnapshot.child("items");
@@ -957,10 +1022,10 @@
                             }
 
                             ItemList item = new ItemList(shopName, shopimage, shopcontactNumber, itemName, price, sellprice, description,
-                                    firstimage, itemkey, imageUrls, destrict,taluka,address, offer );
+                                    firstimage, itemkey, imageUrls, destrict, taluka, address, offer);
                             itemList.add(item);
 
-                            OrderModel orderModel=new OrderModel();
+                            OrderModel orderModel = new OrderModel();
                             orderModel.setProdId(itemskey);
                             orderModel.setProdName(itemName);
                             orderModel.setOffer(offer);
@@ -1015,10 +1080,10 @@
                             currentdate = postSnapshot.child("currentdate").getValue(String.class);
                             postcontactNumber = postSnapshot.child("contactNumber").getValue(String.class);
                             jobid = postSnapshot.child("jobID").getValue(String.class);
-                             experience = postSnapshot.child("experience").getValue(String.class);
-                             salary = postSnapshot.child("salary").getValue(String.class);
-                             skills = postSnapshot.child("skills").getValue(String.class);
-                             jobopenings = postSnapshot.child("jobopenings").getValue(String.class);
+                            experience = postSnapshot.child("experience").getValue(String.class);
+                            salary = postSnapshot.child("salary").getValue(String.class);
+                            skills = postSnapshot.child("skills").getValue(String.class);
+                            jobopenings = postSnapshot.child("jobopenings").getValue(String.class);
 
 
                             System.out.println("Company Name: " + companyname);
@@ -1028,10 +1093,10 @@
                             System.out.println("Workplace Type: " + postcontactNumber);
 
                             JobDetails jobDetails = new JobDetails(jobTitle, companyname, workplacetype, joblocation, jobtype,
-                                    description, currentdate, jobkey, postcontactNumber,experience, salary, skills,jobopenings, jobid);
+                                    description, currentdate, jobkey, postcontactNumber, experience, salary, skills, jobopenings, jobid);
                             jobDetailsList.add(jobDetails);
 
-                            ChatJob chatJob = new ChatJob(companyname, jobTitle, postcontactNumber,userId, jobid);
+                            ChatJob chatJob = new ChatJob(companyname, jobTitle, postcontactNumber, userId, jobid);
                             chatJobList.add(chatJob);
                         }
                     }
@@ -1073,7 +1138,6 @@
                         String candidateStream = jobPostsSnapshot.child("candidateStream").getValue(String.class);
 
 
-
                         EmployeeDetails employeeDetails = new EmployeeDetails(candidateName, candidateEmail, candidateContactNumber, candidateAddress, candidateQualification,
                                 candidateSkills, candidateStream);
 
@@ -1094,7 +1158,6 @@
     }
 
 
-
     @Override
     public void onResume() {
         super.onResume();
@@ -1118,7 +1181,7 @@
 
         Intent intent = new Intent(getContext(), JobPostDetails.class);
 
-       // intent.putExtra("contactNumber", userId);
+        // intent.putExtra("contactNumber", userId);
         intent.putExtra("jobtitle", clickedJob.getJobtitle()); // Replace with the actual method to get job title
         intent.putExtra("companyname", clickedJob.getCompanyname()); // Replace with the actual method to get company name
         intent.putExtra("joblocation", clickedJob.getJoblocation()); // Replace with the actual method to get job location
@@ -1132,7 +1195,7 @@
         intent.putExtra("salary", clickedJob.getSalary());
         intent.putExtra("skills", clickedJob.getSkills());
         intent.putExtra("jobopenings", clickedJob.getJobopenings());
-        System.out.println("sdvcf " +clickedJob.getContactNumber());
+        System.out.println("sdvcf " + clickedJob.getContactNumber());
 
         startActivity(intent);
     }
@@ -1153,7 +1216,7 @@
 
 
     //code by ik
-    public void LoadHomeData(){
+    public void LoadHomeData() {
 
 //        homeItemList=new ArrayList<>();
 //
@@ -1203,10 +1266,10 @@
                             shopRef.child(contactNumber).addListenerForSingleValueEvent(new ValueEventListener() {
                                 @Override
                                 public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
-                                    if (snapshot.exists()){
+                                    if (snapshot.exists()) {
                                         String shopname = snapshot.child("shopName").getValue(String.class);
                                         String shopimage = snapshot.child("url").getValue(String.class);
-                                        String shopaddress= snapshot.child("address").getValue(String.class);
+                                        String shopaddress = snapshot.child("address").getValue(String.class);
                                     }
                                 }
 
@@ -1225,7 +1288,7 @@
                             String shopaddress = keySnapshot.child("shopaddress").getValue(String.class);
 
 
-                            PostModel postModel=new PostModel();
+                            PostModel postModel = new PostModel();
                             postModel.setPostId(key);
                             postModel.setPostDesc(caption);
                             postModel.setPostType(posttype);
@@ -1286,7 +1349,7 @@
                             System.out.println("Item Key: " + itemKey);
                             System.out.println("Offer: " + offer);
 
-                            OrderModel orderModel=new OrderModel();
+                            OrderModel orderModel = new OrderModel();
                             orderModel.setProdId(itemKey);
                             orderModel.setProdName(itemName);
                             orderModel.setOffer(offer);
@@ -1347,8 +1410,6 @@
 //        }
 
 
-
-
     }
 
 
@@ -1382,7 +1443,7 @@
                 intent.putExtra("contactNumber", clickedShopcontactNumber);
                 intent.putExtra("itemOffer", itemoffer);
                 intent.putExtra("itemSellPrice", itemsellprice);
-               // intent.putExtra("shopName", shopName);
+                // intent.putExtra("shopName", shopName);
                 intent.putExtra("flag", flag);
 
                 // Pass the list of item images
@@ -1451,6 +1512,7 @@
 
                     // Notify adapter or update UI as needed...
                     homeMultiAdapter.notifyDataSetChanged();
+
                 }
             }
 
@@ -1584,7 +1646,7 @@
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshotx) {
                 if (snapshotx.exists()) {
-                    x=0;
+                    x = 0;
                     for (DataSnapshot contactNumberSnapshot : snapshotx.getChildren()) {
                         String contactNumber = contactNumberSnapshot.getKey();
 
@@ -1593,18 +1655,19 @@
                             shopRef.child(contactNumber).addListenerForSingleValueEvent(new ValueEventListener() {
                                 @Override
                                 public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
-                                    if (snapshot.exists()){
+                                    if (snapshot.exists()) {
                                         shopname = snapshot.child("shopName").getValue(String.class);
                                         shopimagex = snapshot.child("url").getValue(String.class);
-                                        shopaddress= snapshot.child("address").getValue(String.class);
+                                        shopaddress = snapshot.child("address").getValue(String.class);
 
                                         String postImg = keySnapshot.child("postImg").getValue(String.class);
                                         String postDesc = keySnapshot.child("postDesc").getValue(String.class);
                                         String postType = keySnapshot.child("postType").getValue(String.class);
                                         String postKeys = keySnapshot.child("postKeys").getValue(String.class);
                                         String postCate = keySnapshot.child("postCate").getValue(String.class);
+                                        String servArea = keySnapshot.child("servingArea").getValue(String.class);
 
-                                        PostModel postModel=new PostModel();
+                                        PostModel postModel = new PostModel();
                                         postModel.setPostId(key);
                                         postModel.setPostDesc(postDesc);
                                         postModel.setPostType(postType);
@@ -1612,7 +1675,7 @@
                                         postModel.setPostKeys(postKeys);
                                         postModel.setPostCate(postCate);
 
-                                        Log.d("fsfsfdsdn",""+shopname);
+                                        Log.d("fsfsfdsdn", "" + shopname);
 
                                         postModel.setPostUser(shopname);
                                         postModel.setUserImg(shopimagex);
@@ -1620,9 +1683,9 @@
 
                                         homeItemList.add(postModel);
 
-                                        if(x++==snapshotx.getChildrenCount()-1){
+                                        if (x++ == snapshotx.getChildrenCount() - 1) {
                                             getProductData(homeItemList);
-                                            Log.d("fsfsfdsdn","Ok 1");
+                                            Log.d("fsfsfdsdn", "Ok 1");
                                         }
 
                                     }
@@ -1648,7 +1711,7 @@
 
     }
 
-    public void getProductData(List<Object> ss){
+    public void getProductData(List<Object> ss) {
         DatabaseReference productRef = FirebaseDatabase.getInstance().getReference("Products");
         productRef.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
@@ -1672,6 +1735,7 @@
                             String firstimage = productSnapshot.child("firstImageUrl").getValue(String.class);
                             String sellprice = productSnapshot.child("sell").getValue(String.class);
                             String shopContactNumber = productSnapshot.child("shopContactNumber").getValue(String.class);
+                            String servArea = productSnapshot.child("servingArea").getValue(String.class);
 
                             List<String> imageUrls = new ArrayList<>();
                             DataSnapshot imageUrlsSnapshot = productSnapshot.child("imageUrls");
@@ -1682,7 +1746,7 @@
                                 }
                             }
 
-                            OrderModel orderModel=new OrderModel();
+                            OrderModel orderModel = new OrderModel();
                             orderModel.setProdId(itemKey);
                             orderModel.setProdName(itemName);
                             orderModel.setOffer(offer);
@@ -1697,7 +1761,7 @@
                         }
                     }
 
-                    Log.d("fdafdsfgdsf",""+ss.size());
+                    Log.d("fdafdsfgdsf", "" + ss.size());
 
                     // Merge the lists in a specific sequence
                     int i = 0;
@@ -1734,149 +1798,8 @@
         });
     }
 
-    public void showCategoryF(){
-        // Inflate the layout for the BottomSheetDialog
-        View bottomSheetView = LayoutInflater.from(getActivity()).inflate(R.layout.bottomsheet, null);
-
-        // Customize the BottomSheetDialog as needed
-        final BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(getActivity());
-        bottomSheetDialog.setContentView(bottomSheetView);
-
-        // Disable scrolling for the BottomSheetDialog
-        // Disable scrolling for the BottomSheetDialog
-        // Set the peek height to disable scrolling when content is not tall enough
-        BottomSheetBehavior<View> behavior = BottomSheetBehavior.from((View) bottomSheetView.getParent());
-        behavior.setPeekHeight(getResources().getDisplayMetrics().heightPixels);
-
-        // Handle views inside the BottomSheetDialog
-        @SuppressLint({"MissingInflatedId", "LocalSuppress"})
-        RecyclerView category = bottomSheetView.findViewById(R.id.category);
-        @SuppressLint({"MissingInflatedId", "LocalSuppress"})
-        RecyclerView subcategory = bottomSheetView.findViewById(R.id.subcategory);
-        @SuppressLint({"MissingInflatedId", "LocalSuppress"}) TextView textView = bottomSheetView.findViewById(R.id.closesss);
-        category.setLayoutManager(new LinearLayoutManager(getContext()));
-        subcategory.setLayoutManager(new LinearLayoutManager(getContext()));
-
-        if(categoryModels != null){
-            categoryModels.clear();
-
-            if(categoryAdapter!=null){
-                categoryAdapter.notifyDataSetChanged();
-            }
-        }
-
-        categoryModels=new ArrayList<>();
-
-        final FirebaseDatabase database = FirebaseDatabase.getInstance();
-        DatabaseReference ref = database.getReference("Categories");
-
-        ref.addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(DataSnapshot dataSnapshot) {
-                if(dataSnapshot.exists()){
-                    int x=0;
-                    for (DataSnapshot dsp:dataSnapshot.getChildren()) {
-                        CategoryModel categoryModel = new CategoryModel();
-                        categoryModel.setCname(dsp.getKey());
-                        categoryModel.setCimg(String.valueOf(dsp.child("Img").getValue()));
-                        categoryModels.add(categoryModel);
-                        categoryAdapter = new CategoryAdapter(getContext(), categoryModels, FragmentHome.this);
-
-                        Log.d("fsdfdf", "key: " + dsp.getKey() + " img : " + String.valueOf(dsp.child("Img").getValue()));
-
-                        category.setAdapter(categoryAdapter);
-                        categoryAdapter.notifyDataSetChanged();
-
-                    }
-
-                }else {
-
-                }
-            }
-
-            @Override
-            public void onCancelled(DatabaseError databaseError) {
-                // Log.w(TAG, "onCancelled", databaseError.toException());
-            }
-        });
-
-        // Set the click listener for the adapter
-
-
-
-        categoryAdapter.setOnItemClickListener(new CategoryAdapter.OnItemClickListener() {
-            @Override
-            public void onItemClick(int position) {
-
-                CategoryModel clickedCategory = categoryModels.get(position);
-                String categoryName = clickedCategory.getCname();
-                String categoryImage = clickedCategory.getCimg();
-
-                // Handle item click here
-                // For example, you can show a toast with the clicked category information
-                Toast.makeText(getContext(), "Clicked on category: " + categoryName, Toast.LENGTH_SHORT).show();
-                // Handle item click here (if needed)
-
-                if(categoryModels != null){
-                    categoryModels.clear();
-
-                    if(categoryAdapter!=null){
-                        categoryAdapter.notifyDataSetChanged();
-                    }
-                }
-                categoryModels=new ArrayList<>();
-
-                final FirebaseDatabase database = FirebaseDatabase.getInstance();
-                DatabaseReference ref = database.getReference("Categories");
-
-                ref.addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(DataSnapshot dataSnapshot) {
-                        if(dataSnapshot.exists()){
-                            int x=0;
-                            for (DataSnapshot dsp:dataSnapshot.getChildren()) {
-                                CategoryModel categoryModel = new CategoryModel();
-                                categoryModel.setCname(dsp.getKey());
-                                categoryModel.setCimg(String.valueOf(dsp.child("Img").getValue()));
-                                categoryModels.add(categoryModel);
-                                categoryAdapter = new CategoryAdapter(getContext(), categoryModels, FragmentHome.this);
-
-                                Log.d("fsdfdf", "key: " + dsp.getKey() + " img : " + String.valueOf(dsp.child("Img").getValue()));
-
-                                category.setAdapter(categoryAdapter);
-                                categoryAdapter.notifyDataSetChanged();
-                            }
-
-                        }else {
-
-                        }
-                    }
-
-                    @Override
-                    public void onCancelled(DatabaseError databaseError) {
-                        // Log.w(TAG, "onCancelled", databaseError.toException());
-                    }
-                });
-
-            }
-        });
-
-
-        textView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                // Handle click inside the BottomSheetDialog
-                bottomSheetDialog.dismiss();
-            }
-        });
-
-        // Show the BottomSheetDialog
-        bottomSheetDialog.setCancelable(false);
-        bottomSheetDialog.show();
-
-    }
 
-    public void showCategory(){
+    public void showCategory() {
         // Inflate the layout for the BottomSheetDialog
         View bottomSheetView = LayoutInflater.from(getActivity()).inflate(R.layout.bottomsheet, null);
 
@@ -1902,10 +1825,10 @@
         GridLayoutManager gridLayoutManager = new GridLayoutManager(getContext(), 3); // Change 2 to the desired number of columns
         subcategory.setLayoutManager(gridLayoutManager);
 
-        if(categoryModels != null){
+        if (categoryModels != null) {
             categoryModels.clear();
 
-            if(categoryAdapter != null){
+            if (categoryAdapter != null) {
                 categoryAdapter.notifyDataSetChanged();
             }
         }
@@ -1918,8 +1841,8 @@
         ref.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(DataSnapshot dataSnapshot) {
-                if(dataSnapshot.exists()){
-                    for (DataSnapshot dsp:dataSnapshot.getChildren()) {
+                if (dataSnapshot.exists()) {
+                    for (DataSnapshot dsp : dataSnapshot.getChildren()) {
                         CategoryModel categoryModel = new CategoryModel();
                         categoryModel.setCname(dsp.getKey());
                         categoryModel.setCimg(String.valueOf(dsp.child("Img").getValue()));
@@ -1927,7 +1850,7 @@
                     }
 
                     // Instantiate the adapter after the loop
-                    categoryAdapter = new CategoryAdapter(getContext(), categoryModels,FragmentHome.this);
+                    categoryAdapter = new CategoryAdapter(getContext(), categoryModels, FragmentHome.this);
 
                     // Set the click listener for the adapter
                     categoryAdapter.setOnItemClickListener(new CategoryAdapter.OnItemClickListener() {
@@ -1946,23 +1869,23 @@
                             subcategory.setVisibility(View.VISIBLE);
                             ccdd.setVisibility(View.GONE);
 
-                            if(subCategoryModels != null){
+                            if (subCategoryModels != null) {
                                 subCategoryModels.clear();
 
-                                if(subCateAdapter != null){
+                                if (subCateAdapter != null) {
                                     subCateAdapter.notifyDataSetChanged();
                                 }
                             }
                             subCategoryModels = new ArrayList<>();
 
                             final FirebaseDatabase database = FirebaseDatabase.getInstance();
-                            DatabaseReference ref = database.getReference("Categories/"+categoryName+"/Sub/");
+                            DatabaseReference ref = database.getReference("Categories/" + categoryName + "/Sub/");
 
                             ref.addListenerForSingleValueEvent(new ValueEventListener() {
                                 @Override
                                 public void onDataChange(DataSnapshot dataSnapshot) {
-                                    if(dataSnapshot.exists()){
-                                        for (DataSnapshot dsp:dataSnapshot.getChildren()) {
+                                    if (dataSnapshot.exists()) {
+                                        for (DataSnapshot dsp : dataSnapshot.getChildren()) {
                                             SubCategoryModel categoryModel = new SubCategoryModel();
                                             categoryModel.setSubName(dsp.getKey());
                                             categoryModel.setSubImg(String.valueOf(dsp.child("Img").getValue()));
@@ -1971,7 +1894,7 @@
                                         }
 
                                         // Instantiate the adapter after the loop
-                                        subCateAdapter = new SubCateAdapter(getContext(), subCategoryModels,FragmentHome.this);
+                                        subCateAdapter = new SubCateAdapter(getContext(), subCategoryModels, FragmentHome.this);
 
                                         // Set the click listener for the adapter
                                         subCateAdapter.setOnItemClickListener(new SubCateAdapter.OnItemClickListener() {
@@ -2027,149 +1950,300 @@
 
     }
 
-    public void LoadHomeDataNewTata() {
-        ClearAllHome();
-        lottieAnimationView.setVisibility(View.VISIBLE);
+
+
+    private void getLocation() {
+        FusedLocationProviderClient fusedLocationClient = LocationServices.getFusedLocationProviderClient(requireActivity());
+
+        if (ActivityCompat.checkSelfPermission(requireContext(), android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(requireContext(), android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            // TODO: Consider calling
+            //    ActivityCompat#requestPermissions
+            // here to request the missing permissions, and then overriding
+            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
+            //                                          int[] grantResults)
+            // to handle the case where the user grants the permission. See the documentation
+            // for ActivityCompat#requestPermissions for more details.
+            return;
+        }
+
+        fusedLocationClient.getLastLocation()
+                .addOnSuccessListener(requireActivity(), location -> {
+                    if (location != null) {
+                        double latitude = location.getLatitude();
+                        double longitude = location.getLongitude();
+
+                        // Geocode the location to get postal code
+                        geocodeLocation(latitude, longitude);
+                    } else {
+                        Toast.makeText(requireContext(), "Unable to get location", Toast.LENGTH_SHORT).show();
+                    }
+                })
+                .addOnFailureListener(requireActivity(), e -> {
+                    // Handle failure
+                    Toast.makeText(requireContext(), "Location request failed", Toast.LENGTH_SHORT).show();
+                });
+    }
+
+    private void geocodeLocation(double latitude, double longitude) {
+        Geocoder geocoder = new Geocoder(getActivity(), Locale.getDefault());
+
+        try {
+            List<Address> addresses = geocoder.getFromLocation(latitude, longitude, 1);
+            if (addresses != null && addresses.size() > 0) {
+                String postalCode = addresses.get(0).getPostalCode();
+                String dd = addresses.get(0).getLocality();
+                Log.d("fsdafda","pin code : "+postalCode+"\n Locality: "+addresses.get(0).getLocality()+"\n Sublocaltiy : "+addresses.get(0).getSubLocality()+"\n Admin Area : "+addresses.get(0).getAdminArea()+"\n Address: "+addresses.get(0).getAddressLine(0));
+                // Use the postal code as needed
+                location.setText(dd);
+                ClearAllHome();
+                LoadHomeDataNewByLocation();
+               // Toast.makeText(getActivity(), "Postal Code: " + dd, Toast.LENGTH_SHORT).show();
+
+            } else {
+                location.setText("Global");
+                //Toast.makeText(getActivity(), "No address found", Toast.LENGTH_SHORT).show();
+                ClearAllHome();
+                LoadHomeDataNewTest();
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+            // Handle geocoding error
+            Toast.makeText(getActivity(), "Geocoding failed", Toast.LENGTH_SHORT).show();
+        }
+    }
 
-        DatabaseReference productRef = FirebaseDatabase.getInstance().getReference("Products");
+    public void LoadHomeDataNewByLocation() {
+        ClearAllHome();
         DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("BusinessPosts");
-
-        // Use CountDownLatch to wait for both Firebase calls to complete
-        CountDownLatch latch = new CountDownLatch(2);
-
-        productRef.addListenerForSingleValueEvent(new ValueEventListener() {
+        databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                if (snapshot.exists()) {
-                    // Process product data and add to homeItemList
-                    processProductData(snapshot);
+            public void onDataChange(@NonNull DataSnapshot snapshotx) {
+                if (snapshotx.exists()) {
+                    x = 0;
+                    for (DataSnapshot contactNumberSnapshot : snapshotx.getChildren()) {
+                        String contactNumber = contactNumberSnapshot.getKey();
+
+                        for (DataSnapshot keySnapshot : contactNumberSnapshot.getChildren()) {
+                            String key = keySnapshot.getKey();
+                            shopRef.child(contactNumber).addListenerForSingleValueEvent(new ValueEventListener() {
+                                @Override
+                                public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
+                                    if (snapshot.exists()) {
+                                        shopname = snapshot.child("shopName").getValue(String.class);
+                                        shopimagex = snapshot.child("url").getValue(String.class);
+                                        shopaddress = snapshot.child("address").getValue(String.class);
+
+                                        String servArea = keySnapshot.child("servingArea").getValue(String.class);
+
+                                     //   assert servArea != null;
+
+                                        if(servArea == null){
+                                            servArea="-";
+                                        }
+
+                                        boolean isMatch = StringSplit.matchStrings(servArea.toLowerCase(), location.getText().toString().toLowerCase());
+
+                                        // Check serving area conditionser
+                                        if (isMatch) {
+                                            //Toast.makeText(getContext(), "Ok1", Toast.LENGTH_SHORT).show();
+                                            String postImg = keySnapshot.child("postImg").getValue(String.class);
+                                            String postDesc = keySnapshot.child("postDesc").getValue(String.class);
+                                            String postType = keySnapshot.child("postType").getValue(String.class);
+                                            String postKeys = keySnapshot.child("postKeys").getValue(String.class);
+                                            String postCate = keySnapshot.child("postCate").getValue(String.class);
+
+                                            PostModel postModel = new PostModel();
+                                            postModel.setPostId(key);
+                                            postModel.setPostDesc(postDesc);
+                                            postModel.setPostType(postType);
+                                            postModel.setPostImg(postImg);
+                                            postModel.setPostKeys(postKeys);
+                                            postModel.setPostCate(postCate);
+
+                                            Log.d("fsfsfdsdn", "" + shopname);
+
+
+                                            postModel.setPostUser(shopname);
+                                            postModel.setUserImg(shopimagex);
+                                            postModel.setUserAdd(shopaddress);
+
+                                            homeItemList.add(postModel);
 
-                    // Countdown the latch
-                    latch.countDown();
+                                        }
+
+                                        if (x++ == snapshotx.getChildrenCount() - 1) {
+                                            getProductDataX(homeItemList);
+                                           // Toast.makeText(getContext(), "shopname"+ shopname, Toast.LENGTH_SHORT).show();
+                                            Log.d("fsfsfdsdn", "Ok 1");
+                                        }
+                                    }
+                                }
+
+                                @Override
+                                public void onCancelled(@androidx.annotation.NonNull DatabaseError error) {
+                                    // Handle onCancelled
+                                }
+                            });
+                        }
+                    }
                 }
             }
 
             @Override
             public void onCancelled(@NonNull DatabaseError error) {
                 // Handle onCancelled
-                latch.countDown();
             }
         });
+    }
 
-        databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
+    public void getProductDataX(List<Object> ss) {
+        DatabaseReference productRef = FirebaseDatabase.getInstance().getReference("Products");
+        productRef.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
+            public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
                 if (snapshot.exists()) {
-                    // Process post data and add to homeItemList
-                    processPostData(snapshot);
-
-                    // Countdown the latch
-                    latch.countDown();
-                }
-            }
+                    // Separate list for Products
+                    List<OrderModel> productItemList = new ArrayList<>();
 
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-                // Handle onCancelled
-                latch.countDown();
-            }
-        });
-
-        try {
-            // Wait for both Firebase calls to complete
-            latch.await();
-        } catch (InterruptedException e) {
-            e.printStackTrace();
-        }
-
-        // Shuffle the homeItemList after both Firebase calls
-        Collections.shuffle(homeItemList);
-
-        // Notify the adapter
-        homeMultiAdapter.notifyDataSetChanged();
-        lottieAnimationView.setVisibility(View.GONE);
-    }
-
-    private void processProductData(DataSnapshot snapshot) {
-        for (DataSnapshot contactNumberSnapshot : snapshot.getChildren()) {
-            String contactNumber = contactNumberSnapshot.getKey();
+                    for (DataSnapshot contactNumberSnapshot : snapshot.getChildren()) {
+                        String contactNumber = contactNumberSnapshot.getKey();
 
-            for (DataSnapshot productSnapshot : contactNumberSnapshot.getChildren()) {
-                String productId = productSnapshot.getKey();
-                // Now, you can access the data within each product node
-                // ... (Same logic as before)
-                // Now, you can access the data within each product node
-                String itemName = productSnapshot.child("itemname").getValue(String.class);
-                String price = productSnapshot.child("price").getValue(String.class);
-                String sell = productSnapshot.child("sell").getValue(String.class);
-                String description = productSnapshot.child("description").getValue(String.class);
-                String itemKey = productSnapshot.child("itemkey").getValue(String.class);
-                String offer = productSnapshot.child("offer").getValue(String.class);
-                String firstimage = productSnapshot.child("firstImageUrl").getValue(String.class);
-                String sellprice = productSnapshot.child("sell").getValue(String.class);
-                String shopContactNumber = productSnapshot.child("shopContactNumber").getValue(String.class);
-                System.out.println("sdgsg " + shopContactNumber);
+                        for (DataSnapshot productSnapshot : contactNumberSnapshot.getChildren()) {
+                            String productId = productSnapshot.getKey();
+
+                            String servArea = productSnapshot.child("servingArea").getValue(String.class);
+
+                            //assert servArea != null;
+                            System.out.println("wesdv " +productId);
+
+                            if(servArea == null){
+                                servArea="-";
+                            }
+
+                         //   Toast.makeText(getContext(), "Ok2 "+servArea, Toast.LENGTH_SHORT).show();
+
+                            boolean isMatch = StringSplit.matchStrings(servArea.toLowerCase(), location.getText().toString().toLowerCase());
+                            // Check serving area condition
+                            if (isMatch) {
+                              //  Toast.makeText(getContext(), "Ok2", Toast.LENGTH_SHORT).show();
+                                String itemName = productSnapshot.child("itemname").getValue(String.class);
+                                String price = productSnapshot.child("price").getValue(String.class);
+                                String sell = productSnapshot.child("sell").getValue(String.class);
+                                String description = productSnapshot.child("description").getValue(String.class);
+                                String itemKey = productSnapshot.child("itemkey").getValue(String.class);
+                                String offer = productSnapshot.child("offer").getValue(String.class);
+                                String firstimage = productSnapshot.child("firstImageUrl").getValue(String.class);
+                                String sellprice = productSnapshot.child("sell").getValue(String.class);
+                                String shopContactNumber = productSnapshot.child("shopContactNumber").getValue(String.class);
 
-                List<String> imageUrls = new ArrayList<>();
-                DataSnapshot imageUrlsSnapshot = productSnapshot.child("imageUrls");
-                for (DataSnapshot imageUrlSnapshot : imageUrlsSnapshot.getChildren()) {
-                    String imageUrl = imageUrlSnapshot.getValue(String.class);
-                    if (imageUrl != null) {
-                        imageUrls.add(imageUrl);
-                    }
-                }
+                                List<String> imageUrls = new ArrayList<>();
+                                DataSnapshot imageUrlsSnapshot = productSnapshot.child("imageUrls");
+                                for (DataSnapshot imageUrlSnapshot : imageUrlsSnapshot.getChildren()) {
+                                    String imageUrl = imageUrlSnapshot.getValue(String.class);
+                                    if (imageUrl != null) {
+                                        imageUrls.add(imageUrl);
+                                    }
+                                }
 
-                OrderModel orderModel = new OrderModel();
-                orderModel.setProdId(itemKey);
-                orderModel.setProdName(itemName);
-                orderModel.setOffer(offer);
-                orderModel.setProImg(firstimage);
-                orderModel.setProDesc(description);
-                orderModel.setProprice(price);
-                orderModel.setProsell(sellprice);
-                orderModel.setShopContactNum(shopContactNumber);
-                orderModel.setImagesUrls(imageUrls);
-                homeItemList.add(orderModel);
-            }
-        }
-    }
+                                OrderModel orderModel = new OrderModel();
+                                orderModel.setProdId(itemKey);
+                                orderModel.setProdName(itemName);
+                                orderModel.setOffer(offer);
+                                orderModel.setProImg(firstimage);
+                                orderModel.setProDesc(description);
+                                orderModel.setProprice(price);
+                                orderModel.setProsell(sellprice);
+                                orderModel.setShopContactNum(shopContactNumber);
+                                orderModel.setImagesUrls(imageUrls);
+                                productItemList.add(orderModel);
+                            }
+                        }
+                    }
 
-    private void processPostData(DataSnapshot snapshot) {
-        for (DataSnapshot contactNumberSnapshot : snapshot.getChildren()) {
-            String contactNumber = contactNumberSnapshot.getKey();
+                    Log.d("fdafdsfgdsf", "" + ss.size());
 
-            for (DataSnapshot keySnapshot : contactNumberSnapshot.getChildren()) {
-                contactkey = keySnapshot.getKey();
-                shopRef.child(contactNumber).addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@androidx.annotation.NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            // Process post data and add to homeItemList
-                            // ... (Same logic as before)
+                    // Merge the lists in a specific sequence
+                    int i = 0;
+                    int j = 0;
+                    while (i < ss.size() && j < productItemList.size()) {
+                        // Insert BusinessPosts item
+                        ss.add(i, productItemList.get(j));
+                        i += 2;  // Increment by 2 to insert Product item next
+                        j++;
+                    }
 
-                            PostModel postModel = new PostModel();
-                            postModel.setPostId(contactkey);
-                            postModel.setPostDesc(postDesc);
-                            postModel.setPostType(postType);
-                            postModel.setPostImg(postImg);
-                            postModel.setPostKeys(postKeys);
-                            postModel.setPostCate(postCate);
+                    // If there are remaining Product items, add them at the end
+                    while (j < productItemList.size()) {
+                        ss.add(productItemList.get(j));
+                        j++;
+                    }
 
-                            postModel.setPostUser(shopname);
-                            postModel.setUserImg(shopimagex);
-                            postModel.setUserAdd(shopaddress);
-                            homeItemList.add(postModel);
-                        }
-                    }
+                    Collections.shuffle(ss);
+
+                    // Notify adapter or update UI as needed...
+
+                    informationrecycerview.setLayoutManager(new LinearLayoutManager(getContext()));
+                    homeMultiAdapter = new HomeMultiAdapter(homeItemList, FragmentHome.this);
+                    informationrecycerview.setAdapter(homeMultiAdapter);
+
+                    homeMultiAdapter.notifyDataSetChanged();
+                }
+            }
 
-                    @Override
-                    public void onCancelled(@androidx.annotation.NonNull DatabaseError error) {
-                        // Handle onCancelled
-                    }
-                });
+            @Override
+            public void onCancelled(@androidx.annotation.NonNull DatabaseError error) {
+                // Handle onCancelled
+            }
+        });
+    }
+
+    public void setLocation(){
+        // Inflate the layout for the BottomSheetDialog
+        View bottomSheetView = LayoutInflater.from(getActivity()).inflate(R.layout.locate, null);
+
+        // Customize the BottomSheetDialog as needed
+        final BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(getActivity());
+        bottomSheetDialog.setContentView(bottomSheetView);
+
+        // Disable scrolling for the BottomSheetDialog
+       // BottomSheetBehavior<View> behavior = BottomSheetBehavior.from((View) bottomSheetView.getParent());
+     //   behavior.setPeekHeight(getResources().getDisplayMetrics().heightPixels);
+
+        // Handle views inside the BottomSheetDialog
+        @SuppressLint({"MissingInflatedId", "LocalSuppress"}) CardView myLoc = bottomSheetView.findViewById(R.id.myLoc);
+        @SuppressLint({"MissingInflatedId", "LocalSuppress"}) CardView globLoc = bottomSheetView.findViewById(R.id.globLoc);
+
+        myLoc.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                // Check and request location permissions if not granted
+                if (ContextCompat.checkSelfPermission(getActivity(), android.Manifest.permission.ACCESS_FINE_LOCATION)
+                        != PackageManager.PERMISSION_GRANTED) {
+                    ActivityCompat.requestPermissions(getActivity(),
+                            new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION},
+                            LOCATION_PERMISSION_REQUEST_CODE);
+                } else {
+                    // Permissions already granted, proceed to get location
+                    getLocation();
+                    bottomSheetDialog.dismiss();
+                }
             }
-        }
+        });
+
+        globLoc.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                location.setText("Global");
+                ClearAllHome();
+                LoadHomeDataNewTest();
+                bottomSheetDialog.dismiss();
+            }
+        });
+
+        bottomSheetDialog.show();
+
     }
+
 
 
 }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -184,6 +184,12 @@
 
     implementation 'com.github.dhaval2404:imagepicker:2.1'
 
+    implementation 'androidx.appcompat:appcompat:1.3.1'
+    implementation 'androidx.core:core-ktx:1.7.0'
+    implementation 'androidx.fragment:fragment-ktx:1.4.0'
+    implementation 'androidx.activity:activity-ktx:1.3.1'
+
+
 
 }
 
Index: app/src/main/java/com/spark/swarajyabiz/ui/CommunityFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/spark/swarajyabiz/ui/CommunityFragment.java b/app/src/main/java/com/spark/swarajyabiz/ui/CommunityFragment.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/spark/swarajyabiz/ui/CommunityFragment.java	
@@ -0,0 +1,31 @@
+package com.spark.swarajyabiz.ui;
+
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.spark.swarajyabiz.R;
+
+public class CommunityFragment extends Fragment {
+
+    public CommunityFragment() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        return inflater.inflate(R.layout.fragment_community, container, false);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -554,6 +554,7 @@
     <string name="title_activity_main2">MainActivity2</string>
     <string name="title_home">Home</string>
     <string name="title_dashboard">Banner</string>
+    <string name="title_comm">Community</string>
     <string name="title_notifications">Profile</string>
     <string name="title_activity_bottom_navigation">BottomNavigation</string>
     <string name="title_activity_admin">AdminActivity</string>
Index: app/src/main/res/drawable/arrowblk.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/arrowblk.xml b/app/src/main/res/drawable/arrowblk.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/arrowblk.xml	
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#989292"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M22,12c0,-5.52 -4.48,-10 -10,-10S2,6.48 2,12c0,5.52 4.48,10 10,10S22,17.52 22,12zM12,13l-4,0v-2l4,0V8l4,4l-4,4V13z"/>
+</vector>
Index: app/src/main/java/com/spark/swarajyabiz/Adapters/StringSplit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/spark/swarajyabiz/Adapters/StringSplit.java b/app/src/main/java/com/spark/swarajyabiz/Adapters/StringSplit.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/spark/swarajyabiz/Adapters/StringSplit.java	
@@ -0,0 +1,20 @@
+package com.spark.swarajyabiz.Adapters;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+
+public class StringSplit {
+    public static boolean matchStrings(String value1, String value2) {
+        // Split value1 on '&&' delimiter
+        String[] values = value1.split("&&");
+
+        // Check if value2 matches any of the split values
+        for (String val : values) {
+            if (val.trim().equals(value2.trim())) {
+                return true; // Match found
+            }
+        }
+
+        return false; // No match found
+    }
+}
\ No newline at end of file
Index: app/src/main/res/menu/bottom_nav_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_nav_menu.xml b/app/src/main/res/menu/bottom_nav_menu.xml
--- a/app/src/main/res/menu/bottom_nav_menu.xml	
+++ b/app/src/main/res/menu/bottom_nav_menu.xml	
@@ -12,6 +12,11 @@
         android:icon="@drawable/ic_outline_banner_24"
         android:title="@string/title_dashboard" />
 
+    <item
+        android:id="@+id/navigation_community"
+        android:icon="@drawable/community"
+        android:title="@string/title_comm" />
+
     <item
         android:id="@+id/navigation_notifications"
         android:icon="@drawable/ic_outline_person_24"
Index: app/src/main/res/layout/commlist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/commlist.xml b/app/src/main/res/layout/commlist.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/commlist.xml	
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_margin="10dp"
+    app:cardElevation="10dp"
+    android:layout_height="80dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:gravity="center_vertical"
+        android:layout_height="wrap_content">
+
+        <de.hdodenhof.circleimageview.CircleImageView
+            android:layout_width="60dp"
+            android:layout_marginStart="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginBottom="10dp"
+            android:background="@color/mainbrandcolor"
+            android:layout_height="60dp"/>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:orientation="vertical"
+            android:gravity="center_vertical"
+            android:layout_marginStart="10dp"
+            android:layout_weight="1"
+            android:layout_height="match_parent">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:text="Community Name"
+                android:textStyle="bold"
+                android:textSize="16sp"
+                android:textColor="@color/mainbrandcolor"
+                android:layout_height="wrap_content"/>
+
+            <TextView
+                android:layout_width="match_parent"
+                android:text="100 Shops"
+                android:textStyle="normal"
+                android:textSize="14sp"
+                android:layout_marginTop="5dp"
+                android:layout_height="wrap_content"/>
+
+        </LinearLayout>
+
+        <ImageView
+            android:layout_width="40dp"
+            android:layout_margin="10dp"
+            android:src="@drawable/arrowblk"
+            android:layout_height="40dp"/>
+
+    </LinearLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/layout/fragment__home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment__home.xml b/app/src/main/res/layout/fragment__home.xml
--- a/app/src/main/res/layout/fragment__home.xml	
+++ b/app/src/main/res/layout/fragment__home.xml	
@@ -93,32 +93,44 @@
             android:layout_marginEnd="-12dp"
             android:src="@drawable/newlogo1"
             android:scaleType="fitXY"
-            android:alpha="0.2"
+            android:alpha="0.1"
             android:layout_height="90dp" />
 
         <LinearLayout
             android:layout_width="wrap_content"
             android:orientation="vertical"
-            android:layout_height="wrap_content">
+            android:layout_gravity="end"
+            android:gravity="end|center_vertical"
+            android:layout_height="match_parent">
+
+
+            <LinearLayout
+                android:id="@+id/locset"
+                android:layout_width="wrap_content"
+                android:layout_marginEnd="10dp"
+                android:gravity="center_vertical"
+                android:layout_height="wrap_content">
 
-            <TextView
-                android:layout_width="wrap_content"
-                android:text="My Current Location"
-                android:layout_height="wrap_content"/>
+                <ImageView
+                    android:layout_width="25dp"
+                    android:src="@drawable/ic_baseline_location_on_24514"
+                    android:layout_height="25dp"/>
+
+                <TextView
+                    android:id="@+id/pincode"
+                    android:layout_width="wrap_content"
+                    android:text="-"
+                    android:layout_marginStart="5dp"
+                    android:textSize="16sp"
+                    android:textColor="@color/black"
+                    android:layout_height="wrap_content"/>
 
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:text="My Current Location"
-                android:layout_height="wrap_content"/>
+            </LinearLayout>
 
         </LinearLayout>
 
-
-
     </FrameLayout>
 
-
     <LinearLayout
         android:layout_below="@+id/headerx"
         android:layout_width="match_parent"
@@ -219,6 +231,7 @@
                         android:textSize="10sp"
                         android:visibility="gone"
                         android:textStyle="bold" />
+
                 </RadioGroup>
 
             </LinearLayout>
